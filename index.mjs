import { CONFIGDATA } from "./configData.mjs";
import { bot } from "./bot.mjs";
import { logger } from "./logger.mjs";
import { UIDList } from "./UIDList.mjs";

/**
 * INITIALIZATION LOOP
 */
export let onlinePlayers = null;
export let map = null;
let lastMsgTime = 0;

setInterval(async () => {
const response = await fetch(CONFIGDATA.sav_api_url);
console.log(`fetch ${String(new Date())}`)

if (response.status === 200) {
    const responseText = await response.text();
    const data = JSON.parse(responseText);
    
    // –ù–∞—Ö–æ–¥–∏–º –≤ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–º –æ—ä–µ–∫—Ç–µ –Ω—É–∂–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∏ –µ–≥–æ –¥–∞–Ω–Ω—ã–µ - —Ç–µ–∫—É—â–∏–µ –æ–Ω–ª–∞–π–Ω –∏ –∫–∞—Ä—Ç—É
    const pubEuServerData = data.find((item) => item.data.ip === CONFIGDATA.tracked_sever_ip);
    onlinePlayers = Number(pubEuServerData.data.cnum);
    map = String(pubEuServerData.data.world);
    const currentTime = Date.now();

    // –ï—Å–ª–∏ –∏–≥—Ä–æ–∫–æ–≤ –±–æ–ª—å—à–µ —á–µ–º —É–∫–∞–∑–∞–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –∏ –ø—Ä–æ—à–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –±–æ–ª—å—à–µ —á–µ–º –∑–∞–¥–∞–Ω–Ω—ã–π –≤ –∫–æ–Ω—Ñ–∏–≥–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–±—â –ø–æ —Å–ø–∏—Å–∫—É id —é–∑–µ—Ä–æ–≤.
    if (onlinePlayers > CONFIGDATA.tracked_quantity_players && currentTime - lastMsgTime > CONFIGDATA.message_interval_ms )  {
        lastMsgTime = currentTime;

        const uidListArr = UIDList.getUIDList();
        (async (uidArr) => {
            for (let uid of uidArr) {
               await bot.sendMessage(uid, `Hey gg is going on! üëã\nPlayers online: ${onlinePlayers}. \nMap: ${map}`);
               await new Promise(resolve => setTimeout(resolve, 100));
            }
        })(uidListArr);
    }
    
} else {
    logger.addLogEntry(`response status: ${response.status} - –ù–µ–≤–µ—Ä–Ω—ã–π —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞`)
}

}, CONFIGDATA.server_request_ms);

  await bot.startPolling()

// —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ
// –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ node
